// 실행 컨텍스트란?
// 실행할 코드에 환경 정보를 모아놓은 객체임.
// 3가지 역할을함
//  - 1. 호이스팅
//  - 2. 외부 환경 정보 구성
//  - 3. this 바인딩

// 실행 컨텍스트를 이해하려면 콜 스택을 이해해야함, 그 전에 스택이란 개념을 이해해보셈
// 스택 : 바스켓 / 큐 : 원통
// 스택은 구조상 마지막에 들어간 것이 처음으로 나옴
// 큐는 처음 들어간게 처음으로 나옴


// 콜 스택(call stack)
// 실행할 코드에 제공할 환경 정보를 뫃아놓은 객체라고 했음. 
// 실행할 코드는 내가 작성함. 그 코드를 수행할 환경 정보를 모아둔 정보라고 보면됌. 그걸 쌓아놓는 곳이 콜 스택임
// 이러한 방법으로 코드의 환경 및 순서를 보장함

// 1. 컨텍스트의 구성
// 전역 공간도 있고 eval함수도 있지만 우린 함수를 중요히 생각하면 됌

let a = 1;
function outer() {
  function inner() {
    console.log(a); // undefined : 1등으로 찍힘
    let a = 3;
  }
  inner(); // 여기가 실행되면 inner 함수 내부로 이동! ---- 2번
  console.log(a); // 3 : 2등으로 찍힘
}
outer(); // 처음 실행이 되면서 inner()을 봐야함 ---- 3번
console.log(a); // 3등으로 찍힘

// 코드실행 → 전역(in) → 전역(중단) + outer(in) → outer(중단) + inner(in) → inner(out) + outer(재개) → 
// outer(out) + 전역(재개) → 전역(out) → 코드종료